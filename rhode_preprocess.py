import osimport numpy as npimport pandas as pdimport randomimport mathimport shutilimport timefrom preprocess_tools import ds_store_removal, data_split, numbers2excel, \    copy_to_folder, minimum_images, copy_some_imagescwd = os.getcwd()# print(cwd)# Split patients and move images to corresponding folder."""sourcePath = 'Rhode Island Dataset'destinationPath = 'rhode dataset split'trainList, validList, testList = data_split(source_path=sourcePath, current_working_directory=cwd)train_list_excel = numbers2excel(trainList, 'rhode_train', 'train', return_list=True)valid_list_excel = numbers2excel(validList, 'rhode_valid', 'valid', return_list=True)test_list_excel = numbers2excel(testList, 'rhode_test', 'test', return_list=True)start = time.time()copy_to_folder(destination_folder='train', list_to_copy=train_list_excel,               current_working_directory=cwd, source_path=sourcePath,               destination_path=destinationPath)copy_to_folder(destination_folder='validation', list_to_copy=valid_list_excel,               current_working_directory=cwd, source_path=sourcePath,               destination_path=destinationPath)copy_to_folder(destination_folder='test', list_to_copy=test_list_excel,               current_working_directory=cwd, source_path=sourcePath,               destination_path=destinationPath)end = time.time()print(f'time to move images: {(end - start) / 3600} hours.')"""# Perform the Down Sampling."""sourcePathLandmarkTrain = 'rhode dataset split/train'destinationPathTrain = 'rhode dataset split/train_ds'minimum_train_images = minimum_images(current_work_directory=cwd, src_path=sourcePathLandmarkTrain)copy_some_images(current_work_directory=cwd, src_path=sourcePathLandmarkTrain,                 dst_path=destinationPathTrain, minimum=minimum_train_images)sourcePathLandmarkValidation = 'rhode dataset split/validation'destinationPathValidation = 'rhode dataset split/validation_ds'minimum_valid_images = minimum_images(current_work_directory=cwd, src_path=sourcePathLandmarkValidation)copy_some_images(current_work_directory=cwd, src_path=sourcePathLandmarkValidation,                 dst_path=destinationPathValidation, minimum=minimum_valid_images)sourcePathLandmarkTest = 'rhode dataset split/test'destinationPathTest = 'rhode dataset split/test_ds'minimum_test_images = minimum_images(current_work_directory=cwd, src_path=sourcePathLandmarkTest)copy_some_images(current_work_directory=cwd, src_path=sourcePathLandmarkTest,                 dst_path=destinationPathTest, minimum=minimum_test_images)"""